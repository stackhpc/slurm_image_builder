name: Build Rocky+OFED image on arcus:rcp-cloud-portal-demo
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  arcus:
    runs-on: ubuntu-20.04
    outputs:
      image_name:  ${{ steps.manifest.outputs.IMAGE_NAME }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup ssh
        run: |
          set -x
          mkdir ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 0600 ~/.ssh/id_rsa
        env:
          SSH_KEY: ${{ secrets.ARCUS_SSH_KEY }}

      - name: Add bastion's ssh key to known_hosts
        run: cat .github/arcus_bastion_fingerprint >> ~/.ssh/known_hosts
        shell: bash
      
      - name: Install ansible etc
        run: ./setup.sh

      - name: Write clouds.yaml
        run: |
          mkdir -p ~/.config/openstack/
          echo "$CLOUDS_YAML" > ~/.config/openstack/clouds.yaml
        shell: bash
        env:
          CLOUDS_YAML: ${{ secrets.ARCUS_CLOUDS_YAML }}

      - name: Run image build
        id: image_build
        run: |
          . venv/bin/activate
          PACKER_LOG=1 packer build --on-error=ask -var-file=arcus.pkrvars.hcl openstack.pkr.hcl
        env:
          OS_CLOUD: openstack

      - name: Get created image name from manifest
        id: manifest
        run: |
          sudo apt-get install jq
          IMAGE_ID=$(jq '.builds[-1].artifact_id' packer-manifest.json)
          IMAGE_NAME=$(openstack image show -f value -c name $IMAGE_ID)
          echo "::set-output name=IMAGE_ID::$IMAGE_ID"
          echo "::set-output name=IMAGE_NAME::$IMAGE_NAME"
        env:
          OS_CLOUD: openstack

      # - name: Download image to runner
      #   run: |
      #     openstack image --file ${{ steps.manifest.outputs.IMAGE_NAME }} save ${{ steps.manifest.outputs.IMAGE_ID }}
      #     echo "$S3_CFG" > ~/.s3cfg
      #   env:
      #     OS_CLOUD: openstack

      # - name: Upload image to S3 prerelease bucket
      #   run: |
      #     echo "$S3_CFG" >  ~/.s3cfg
      #     s3cmd put ${{ steps.manifest.outputs.IMAGE_NAME }} s3://openhpc-images-prerelease
      #   env:
      #     S3_CFG: ${{ secrets.ARCUS_S3_CFG }}
